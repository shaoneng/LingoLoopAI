
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  displayName: 'displayName',
  avatarUrl: 'avatarUrl',
  emailVerified: 'emailVerified',
  settings: 'settings',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuthSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  refreshToken: 'refreshToken',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.AudioFileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  gcsUri: 'gcsUri',
  filename: 'filename',
  durationMs: 'durationMs',
  sizeBytes: 'sizeBytes',
  language: 'language',
  mode: 'mode',
  gapSec: 'gapSec',
  status: 'status',
  errorMessage: 'errorMessage',
  meta: 'meta',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.TranscriptRunScalarFieldEnum = {
  id: 'id',
  audioId: 'audioId',
  authorId: 'authorId',
  version: 'version',
  engine: 'engine',
  params: 'params',
  paramsHash: 'paramsHash',
  status: 'status',
  error: 'error',
  text: 'text',
  segments: 'segments',
  speakerCount: 'speakerCount',
  confidence: 'confidence',
  createdAt: 'createdAt',
  completedAt: 'completedAt'
};

exports.Prisma.TranscriptRevisionScalarFieldEnum = {
  id: 'id',
  runId: 'runId',
  title: 'title',
  text: 'text',
  segments: 'segments',
  createdBy: 'createdBy',
  createdAt: 'createdAt'
};

exports.Prisma.AnalysisScalarFieldEnum = {
  id: 'id',
  runId: 'runId',
  segmentIndex: 'segmentIndex',
  kind: 'kind',
  engine: 'engine',
  params: 'params',
  paramsHash: 'paramsHash',
  status: 'status',
  summary: 'summary',
  score: 'score',
  result: 'result',
  error: 'error',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  completedAt: 'completedAt'
};

exports.Prisma.AnnotationScalarFieldEnum = {
  id: 'id',
  runId: 'runId',
  userId: 'userId',
  content: 'content',
  anchorType: 'anchorType',
  anchorValue: 'anchorValue',
  createdAt: 'createdAt',
  isDeleted: 'isDeleted'
};

exports.Prisma.AudioTagScalarFieldEnum = {
  id: 'id',
  audioId: 'audioId',
  key: 'key',
  createdAt: 'createdAt'
};

exports.Prisma.UsageLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  day: 'day',
  uploadCount: 'uploadCount',
  durationMs: 'durationMs',
  createdAt: 'createdAt'
};

exports.Prisma.JobScalarFieldEnum = {
  id: 'id',
  audioId: 'audioId',
  runId: 'runId',
  jobType: 'jobType',
  providerJobId: 'providerJobId',
  status: 'status',
  retryCount: 'retryCount',
  nextRetryAt: 'nextRetryAt',
  errorMessage: 'errorMessage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  kind: 'kind',
  targetId: 'targetId',
  meta: 'meta',
  createdAt: 'createdAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  status: 'status',
  planType: 'planType',
  startedAt: 'startedAt',
  expiresAt: 'expiresAt',
  cancelledAt: 'cancelledAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SharedBbcResourceScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  externalUrl: 'externalUrl',
  durationMs: 'durationMs',
  transcript: 'transcript',
  segments: 'segments',
  uploadedById: 'uploadedById',
  isPublished: 'isPublished',
  publishDate: 'publishDate',
  episodeNumber: 'episodeNumber',
  seasonNumber: 'seasonNumber',
  bbcUrl: 'bbcUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  sourceType: 'sourceType',
  licenseInfo: 'licenseInfo'
};

exports.Prisma.LearningSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  audioId: 'audioId',
  transcriptRunId: 'transcriptRunId',
  completedSegments: 'completedSegments',
  totalSegments: 'totalSegments',
  listeningTimeMs: 'listeningTimeMs',
  practiceTimeMs: 'practiceTimeMs',
  loopCount: 'loopCount',
  recordingCount: 'recordingCount',
  score: 'score',
  completedAt: 'completedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.PasswordResetTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  tokenHash: 'tokenHash',
  expiresAt: 'expiresAt',
  usedAt: 'usedAt',
  createdAt: 'createdAt'
};

exports.Prisma.TakedownRequestScalarFieldEnum = {
  id: 'id',
  resourceId: 'resourceId',
  reason: 'reason',
  contactInfo: 'contactInfo',
  additionalInfo: 'additionalInfo',
  requestType: 'requestType',
  status: 'status',
  adminNotes: 'adminNotes',
  resolvedAt: 'resolvedAt',
  resolvedBy: 'resolvedBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  ACTIVE: 'ACTIVE',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED'
};

exports.Prisma.ModelName = {
  User: 'User',
  AuthSession: 'AuthSession',
  AudioFile: 'AudioFile',
  TranscriptRun: 'TranscriptRun',
  TranscriptRevision: 'TranscriptRevision',
  Analysis: 'Analysis',
  Annotation: 'Annotation',
  AudioTag: 'AudioTag',
  UsageLog: 'UsageLog',
  Job: 'Job',
  AuditLog: 'AuditLog',
  Subscription: 'Subscription',
  SharedBbcResource: 'SharedBbcResource',
  LearningSession: 'LearningSession',
  PasswordResetToken: 'PasswordResetToken',
  TakedownRequest: 'TakedownRequest'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/wushaoneng/Library/Mobile Documents/com~apple~CloudDocs/Desktop/BBC英语/6 Minute English/LingoLoopAI/lib/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/wushaoneng/Library/Mobile Documents/com~apple~CloudDocs/Desktop/BBC英语/6 Minute English/LingoLoopAI/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  USER\n  ADMIN\n}\n\nenum SubscriptionStatus {\n  ACTIVE\n  EXPIRED\n  CANCELLED\n}\n\nmodel User {\n  id            String        @id @default(uuid())\n  email         String        @unique\n  passwordHash  String\n  displayName   String?\n  avatarUrl     String?\n  emailVerified Boolean       @default(false)\n  settings      Json?\n  role          Role          @default(USER)\n  subscription  Subscription?\n  createdAt     DateTime      @default(now())\n  updatedAt     DateTime      @updatedAt\n\n  audioFiles          AudioFile[]\n  transcriptRuns      TranscriptRun[]      @relation(\"RunAuthor\")\n  annotations         Annotation[]\n  usageLogs           UsageLog[]\n  authSessions        AuthSession[]\n  auditLogs           AuditLog[]\n  passwordResetTokens PasswordResetToken[]\n  sharedBbcResources  SharedBbcResource[]\n  learningSessions    LearningSession[]\n}\n\nmodel AuthSession {\n  id           String   @id @default(uuid())\n  user         User     @relation(fields: [userId], references: [id])\n  userId       String\n  refreshToken String   @unique\n  expiresAt    DateTime\n  createdAt    DateTime @default(now())\n}\n\nmodel AudioFile {\n  id           String    @id @default(uuid())\n  user         User      @relation(fields: [userId], references: [id])\n  userId       String\n  gcsUri       String\n  filename     String\n  durationMs   Int?\n  sizeBytes    BigInt?\n  language     String?\n  mode         String?\n  gapSec       Float?\n  status       String\n  errorMessage String?\n  meta         Json?\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n  deletedAt    DateTime?\n\n  transcriptRuns   TranscriptRun[]\n  tags             AudioTag[]\n  Job              Job[]\n  learningSessions LearningSession[]\n}\n\nmodel TranscriptRun {\n  id           String    @id @default(uuid())\n  audio        AudioFile @relation(fields: [audioId], references: [id])\n  audioId      String\n  author       User?     @relation(\"RunAuthor\", fields: [authorId], references: [id])\n  authorId     String?\n  version      Int\n  engine       String\n  params       Json?\n  paramsHash   String\n  status       String\n  error        String?\n  text         String?\n  segments     Json?\n  speakerCount Int?\n  confidence   Float?\n  createdAt    DateTime  @default(now())\n  completedAt  DateTime?\n\n  revisions        TranscriptRevision[]\n  annotations      Annotation[]\n  jobs             Job[]\n  analyses         Analysis[]\n  learningSessions LearningSession[]\n\n  @@unique([audioId, paramsHash])\n  @@index([audioId, createdAt])\n}\n\nmodel TranscriptRevision {\n  id        String        @id @default(uuid())\n  run       TranscriptRun @relation(fields: [runId], references: [id])\n  runId     String\n  title     String?\n  text      String\n  segments  Json?\n  createdBy String?\n  createdAt DateTime      @default(now())\n}\n\nmodel Analysis {\n  id           String        @id @default(uuid())\n  run          TranscriptRun @relation(fields: [runId], references: [id])\n  runId        String\n  segmentIndex Int?\n  kind         String\n  engine       String\n  params       Json?\n  paramsHash   String\n  status       String\n  summary      String?\n  score        Float?\n  result       Json?\n  error        String?\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime      @updatedAt\n  completedAt  DateTime?\n\n  @@unique([runId, segmentIndex, kind, engine, paramsHash])\n  @@index([runId, segmentIndex, kind])\n}\n\nmodel Annotation {\n  id          String        @id @default(uuid())\n  run         TranscriptRun @relation(fields: [runId], references: [id])\n  runId       String\n  user        User          @relation(fields: [userId], references: [id])\n  userId      String\n  content     String\n  anchorType  String\n  anchorValue String\n  createdAt   DateTime      @default(now())\n  isDeleted   Boolean       @default(false)\n}\n\nmodel AudioTag {\n  id        String    @id @default(uuid())\n  audio     AudioFile @relation(fields: [audioId], references: [id])\n  audioId   String\n  key       String\n  createdAt DateTime  @default(now())\n\n  @@unique([audioId, key])\n}\n\nmodel UsageLog {\n  id          String   @id @default(uuid())\n  user        User     @relation(fields: [userId], references: [id])\n  userId      String\n  day         DateTime\n  uploadCount Int      @default(0)\n  durationMs  Int      @default(0)\n  createdAt   DateTime @default(now())\n\n  @@unique([userId, day])\n}\n\nmodel Job {\n  id            String        @id @default(uuid())\n  audio         AudioFile?    @relation(fields: [audioId], references: [id])\n  audioId       String?\n  run           TranscriptRun @relation(fields: [runId], references: [id])\n  runId         String\n  jobType       String\n  providerJobId String?\n  status        String\n  retryCount    Int           @default(0)\n  nextRetryAt   DateTime?\n  errorMessage  String?\n  createdAt     DateTime      @default(now())\n  updatedAt     DateTime      @updatedAt\n\n  @@index([status])\n}\n\nmodel AuditLog {\n  id        String   @id @default(uuid())\n  user      User?    @relation(fields: [userId], references: [id])\n  userId    String?\n  kind      String\n  targetId  String?\n  meta      Json?\n  createdAt DateTime @default(now())\n}\n\nmodel Subscription {\n  id          String             @id @default(uuid())\n  user        User               @relation(fields: [userId], references: [id])\n  userId      String\n  status      SubscriptionStatus @default(ACTIVE)\n  planType    String             @default(\"monthly\") // monthly, yearly\n  startedAt   DateTime           @default(now())\n  expiresAt   DateTime\n  cancelledAt DateTime?\n  createdAt   DateTime           @default(now())\n  updatedAt   DateTime           @updatedAt\n\n  @@unique([userId])\n}\n\nmodel SharedBbcResource {\n  id            String    @id @default(uuid())\n  title         String\n  description   String?\n  externalUrl   String? // External audio URL (BBC official or other sources)\n  durationMs    Int?\n  transcript    String? // Transcript text for display purposes\n  segments      Json? // Transcript segments for display\n  uploadedBy    User      @relation(fields: [uploadedById], references: [id])\n  uploadedById  String\n  isPublished   Boolean   @default(false)\n  publishDate   DateTime?\n  episodeNumber Int?\n  seasonNumber  Int?\n  bbcUrl        String? // BBC official page URL\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n  sourceType    String    @default(\"external\") // external, user_uploaded, cc_licensed\n  licenseInfo   String? // License information for copyright compliance\n\n  takedownRequests TakedownRequest[]\n\n  @@index([isPublished, publishDate])\n}\n\nmodel LearningSession {\n  id                String         @id @default(uuid())\n  user              User           @relation(fields: [userId], references: [id])\n  userId            String\n  audioFile         AudioFile      @relation(fields: [audioId], references: [id])\n  audioId           String\n  transcriptRun     TranscriptRun? @relation(fields: [transcriptRunId], references: [id])\n  transcriptRunId   String?\n  completedSegments Int            @default(0)\n  totalSegments     Int            @default(0)\n  listeningTimeMs   Int            @default(0) // 实际听音时长\n  practiceTimeMs    Int            @default(0) // 跟读练习时长\n  loopCount         Int            @default(0) // A/B循环次数\n  recordingCount    Int            @default(0) // 录音次数\n  score             Float? // 学习评分\n  completedAt       DateTime?\n  createdAt         DateTime       @default(now())\n  updatedAt         DateTime       @updatedAt\n  deletedAt         DateTime?\n\n  @@index([userId, createdAt])\n  @@index([userId, completedAt])\n}\n\nmodel PasswordResetToken {\n  id        String    @id @default(uuid())\n  user      User      @relation(fields: [userId], references: [id])\n  userId    String\n  tokenHash String    @unique\n  expiresAt DateTime\n  usedAt    DateTime?\n  createdAt DateTime  @default(now())\n\n  @@index([userId, createdAt])\n}\n\nmodel TakedownRequest {\n  id             String            @id @default(uuid())\n  resourceId     String\n  resource       SharedBbcResource @relation(fields: [resourceId], references: [id])\n  reason         String\n  contactInfo    String\n  additionalInfo String?\n  requestType    String            @default(\"copyright_infringement\")\n  status         String            @default(\"pending\") // pending, processing, resolved, rejected\n  adminNotes     String?\n  resolvedAt     DateTime?\n  resolvedBy     String?\n  createdAt      DateTime          @default(now())\n  updatedAt      DateTime          @updatedAt\n\n  @@index([status, createdAt])\n  @@index([resourceId])\n}\n",
  "inlineSchemaHash": "5f3b6eef7d01fda024e7c3a581077fbdc74c20b6dfbbe1e4810b09437b14eedd",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"audioFiles\",\"kind\":\"object\",\"type\":\"AudioFile\",\"relationName\":\"AudioFileToUser\"},{\"name\":\"transcriptRuns\",\"kind\":\"object\",\"type\":\"TranscriptRun\",\"relationName\":\"RunAuthor\"},{\"name\":\"annotations\",\"kind\":\"object\",\"type\":\"Annotation\",\"relationName\":\"AnnotationToUser\"},{\"name\":\"usageLogs\",\"kind\":\"object\",\"type\":\"UsageLog\",\"relationName\":\"UsageLogToUser\"},{\"name\":\"authSessions\",\"kind\":\"object\",\"type\":\"AuthSession\",\"relationName\":\"AuthSessionToUser\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"passwordResetTokens\",\"kind\":\"object\",\"type\":\"PasswordResetToken\",\"relationName\":\"PasswordResetTokenToUser\"},{\"name\":\"sharedBbcResources\",\"kind\":\"object\",\"type\":\"SharedBbcResource\",\"relationName\":\"SharedBbcResourceToUser\"},{\"name\":\"learningSessions\",\"kind\":\"object\",\"type\":\"LearningSession\",\"relationName\":\"LearningSessionToUser\"}],\"dbName\":null},\"AuthSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuthSessionToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AudioFile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AudioFileToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gcsUri\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"durationMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sizeBytes\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gapSec\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transcriptRuns\",\"kind\":\"object\",\"type\":\"TranscriptRun\",\"relationName\":\"AudioFileToTranscriptRun\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"AudioTag\",\"relationName\":\"AudioFileToAudioTag\"},{\"name\":\"Job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"AudioFileToJob\"},{\"name\":\"learningSessions\",\"kind\":\"object\",\"type\":\"LearningSession\",\"relationName\":\"AudioFileToLearningSession\"}],\"dbName\":null},\"TranscriptRun\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audio\",\"kind\":\"object\",\"type\":\"AudioFile\",\"relationName\":\"AudioFileToTranscriptRun\"},{\"name\":\"audioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RunAuthor\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"engine\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"params\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"paramsHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"segments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"speakerCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revisions\",\"kind\":\"object\",\"type\":\"TranscriptRevision\",\"relationName\":\"TranscriptRevisionToTranscriptRun\"},{\"name\":\"annotations\",\"kind\":\"object\",\"type\":\"Annotation\",\"relationName\":\"AnnotationToTranscriptRun\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToTranscriptRun\"},{\"name\":\"analyses\",\"kind\":\"object\",\"type\":\"Analysis\",\"relationName\":\"AnalysisToTranscriptRun\"},{\"name\":\"learningSessions\",\"kind\":\"object\",\"type\":\"LearningSession\",\"relationName\":\"LearningSessionToTranscriptRun\"}],\"dbName\":null},\"TranscriptRevision\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"run\",\"kind\":\"object\",\"type\":\"TranscriptRun\",\"relationName\":\"TranscriptRevisionToTranscriptRun\"},{\"name\":\"runId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"segments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Analysis\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"run\",\"kind\":\"object\",\"type\":\"TranscriptRun\",\"relationName\":\"AnalysisToTranscriptRun\"},{\"name\":\"runId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"segmentIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"kind\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"engine\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"params\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"paramsHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"result\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Annotation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"run\",\"kind\":\"object\",\"type\":\"TranscriptRun\",\"relationName\":\"AnnotationToTranscriptRun\"},{\"name\":\"runId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AnnotationToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"anchorType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"anchorValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isDeleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"AudioTag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audio\",\"kind\":\"object\",\"type\":\"AudioFile\",\"relationName\":\"AudioFileToAudioTag\"},{\"name\":\"audioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"UsageLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UsageLogToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"day\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uploadCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"durationMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Job\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audio\",\"kind\":\"object\",\"type\":\"AudioFile\",\"relationName\":\"AudioFileToJob\"},{\"name\":\"audioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"run\",\"kind\":\"object\",\"type\":\"TranscriptRun\",\"relationName\":\"JobToTranscriptRun\"},{\"name\":\"runId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerJobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"retryCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nextRetryAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kind\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubscriptionToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"planType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SharedBbcResource\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"externalUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"durationMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"transcript\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"segments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"uploadedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SharedBbcResourceToUser\"},{\"name\":\"uploadedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"publishDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"episodeNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seasonNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bbcUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sourceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"licenseInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"takedownRequests\",\"kind\":\"object\",\"type\":\"TakedownRequest\",\"relationName\":\"SharedBbcResourceToTakedownRequest\"}],\"dbName\":null},\"LearningSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LearningSessionToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audioFile\",\"kind\":\"object\",\"type\":\"AudioFile\",\"relationName\":\"AudioFileToLearningSession\"},{\"name\":\"audioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transcriptRun\",\"kind\":\"object\",\"type\":\"TranscriptRun\",\"relationName\":\"LearningSessionToTranscriptRun\"},{\"name\":\"transcriptRunId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completedSegments\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalSegments\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"listeningTimeMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"practiceTimeMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"loopCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recordingCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PasswordResetToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PasswordResetTokenToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokenHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TakedownRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"object\",\"type\":\"SharedBbcResource\",\"relationName\":\"SharedBbcResourceToTakedownRequest\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"additionalInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

